/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    leads: Lead;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    leads: LeadsSelect<false> | LeadsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  firstName: string;
  lastName: string;
  role: 'admin' | 'user';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * Lead management and analytics dashboard - Visit /admin/dashboard for detailed analytics
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leads".
 */
export interface Lead {
  id: string;
  email: string;
  first?: string | null;
  last?: string | null;
  phone?: string | null;
  convictionType?:
    | ('DUI' | 'misdemeanor' | 'drug-possession' | 'theft' | 'domestic-violence' | 'assault' | 'other' | 'not-sure')
    | null;
  convictionYear?: string | null;
  urgency?: ('immediate' | 'within-month' | 'within-3months' | 'within-year' | 'just-exploring') | null;
  budget?: ('under-100' | '100-500' | '500-1000' | '1000-2000' | 'over-2000' | 'flexible') | null;
  previousAttempts?: ('never' | 'tried-myself' | 'hired-lawyer' | 'partial-success') | null;
  interests?: string | null;
  employmentGoals?: string | null;
  /**
   * Automatically calculated lead score
   */
  leadScore?: number | null;
  leadSegment?: ('hot' | 'warm' | 'lukewarm' | 'cold') | null;
  emailSequence?:
    | (
        | 'general-nurture'
        | 'dui-specific'
        | 'misdemeanor-specific'
        | 'consultation-follow-up'
        | 'high-intent-acceleration'
      )
    | null;
  leadMagnet?: string | null;
  referrer?: string | null;
  amount?: number | null;
  paid?: boolean | null;
  stripeSessionId?: string | null;
  lookup?: boolean | null;
  fullService?: boolean | null;
  source?: ('organic' | 'paid' | 'referral' | 'direct' | 'social' | 'email') | null;
  /**
   * Marketing campaign identifier
   */
  utmCampaign?: string | null;
  /**
   * Traffic source (google, facebook, etc.)
   */
  utmSource?: string | null;
  /**
   * Marketing medium (cpc, email, social, etc.)
   */
  utmMedium?: string | null;
  conversionStage?: ('lead' | 'diy_purchased' | 'review_upgrade' | 'full_service') | null;
  /**
   * When the $50 DIY package was purchased
   */
  diyPurchaseDate?: string | null;
  /**
   * When they upgraded to review or full service
   */
  upgradeDate?: string | null;
  upgradeType?: ('none' | 'review' | 'full') | null;
  /**
   * Minutes from DIY purchase to upgrade
   */
  timeToUpgrade?: number | null;
  /**
   * Sum of all purchases from this lead
   */
  totalRevenue?: number | null;
  /**
   * Projected total value of this customer
   */
  lifetimeValue?: number | null;
  emailStatus?: ('not_sent' | 'sent' | 'delivered' | 'failed') | null;
  /**
   * When the last email was sent to this lead
   */
  lastEmailSent?: string | null;
  /**
   * Count of emails sent to this lead
   */
  emailsSent?: number | null;
  /**
   * How long they spent on the website before converting
   */
  timeOnSite?: string | null;
  /**
   * Number of pages viewed before converting
   */
  pagesViewed?: number | null;
  /**
   * Device used for conversion
   */
  deviceType?: ('desktop' | 'mobile' | 'tablet') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'leads';
        value: string | Lead;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leads_select".
 */
export interface LeadsSelect<T extends boolean = true> {
  email?: T;
  first?: T;
  last?: T;
  phone?: T;
  convictionType?: T;
  convictionYear?: T;
  urgency?: T;
  budget?: T;
  previousAttempts?: T;
  interests?: T;
  employmentGoals?: T;
  leadScore?: T;
  leadSegment?: T;
  emailSequence?: T;
  leadMagnet?: T;
  referrer?: T;
  amount?: T;
  paid?: T;
  stripeSessionId?: T;
  lookup?: T;
  fullService?: T;
  source?: T;
  utmCampaign?: T;
  utmSource?: T;
  utmMedium?: T;
  conversionStage?: T;
  diyPurchaseDate?: T;
  upgradeDate?: T;
  upgradeType?: T;
  timeToUpgrade?: T;
  totalRevenue?: T;
  lifetimeValue?: T;
  emailStatus?: T;
  lastEmailSent?: T;
  emailsSent?: T;
  timeOnSite?: T;
  pagesViewed?: T;
  deviceType?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}